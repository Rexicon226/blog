import numpy as np
import matplotlib.pyplot as plt

p = 17     
g = 3

order = p - 1
elements = [pow(g, i, p) for i in range(order)]  # g^i mod p
angles = np.linspace(0, 2 * np.pi, order, endpoint=False)
radius = 1

fig, ax = plt.subplots(figsize=(8, 8), subplot_kw={'projection': 'polar'})
ax.set_yticklabels([])
ax.set_xticks([])

ax.scatter(angles, [radius] * order, s=80, color='dodgerblue', zorder=2)

# Draw arrows to next element in cycle
for i in range(order):
    theta1, theta2 = angles[i], angles[(i + 1) % order]
    ax.annotate("",
        xy=(theta2, radius),
        xytext=(theta1, radius),
        arrowprops=dict(arrowstyle='->', color='gray', lw=1.5),
        zorder=1
    )

for i, (theta, val) in enumerate(zip(angles, elements)):
    label = rf"$g^{i} \equiv {val}$"
    ax.text(theta, radius + 0.1, label, ha='center', va='center', fontsize=10)

ax.set_title(
    rf"Cyclic Multiplicative Group $\mathbb{{F}}_{{{p}}}^\times$ (Generated by $g = {g}$)",
    fontsize=14,
    pad=20
)

ax.text(0, -0.2, rf"Order = {order}, Elements: $g^0$ to $g^{{{order-1}}}$", ha='center', fontsize=12)

plt.tight_layout()
plt.savefig("multiplicative_group.svg")
